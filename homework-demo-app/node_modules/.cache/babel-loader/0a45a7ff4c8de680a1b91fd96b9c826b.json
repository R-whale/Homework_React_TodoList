{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u5B66\\u4E60\\\\\\u8BFE\\u7A0B\\\\\\u654F\\u6377web\\u5F00\\u53D1\\\\homework-demo-app\\\\src\\\\ListItem.js\";\nimport React, { Component } from 'react';\nimport './ListItem.css';\n\nclass ListItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onDoneChange = event => {\n      this.props.cDone(event.target.innerText);\n    };\n  }\n\n  render() {\n    const item = this.props.item;\n\n    if (item.done) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        variant: \"contained\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }\n      }, \"To-do\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"done-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }, item.content));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        variant: \"contained\",\n        color: \"gray\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, \"Completed\"), /*#__PURE__*/React.createElement(\"p\", {\n        onClick: this.onDoneChange,\n        className: \"item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, item.content));\n    }\n  }\n\n}\n/*\r\nconst ListItem = (props) => {\r\n    const item = props.item;\r\n    if (item.done) {\r\n        return <p className=\"done-item\">{item.content}</p>\r\n    } else {\r\n        return <p className=\"item\">{item.content}</p>\r\n    }\r\n} */\n\n\nexport default ListItem;","map":{"version":3,"sources":["E:/学习/课程/敏捷web开发/homework-demo-app/src/ListItem.js"],"names":["React","Component","ListItem","constructor","props","onDoneChange","event","cDone","target","innerText","render","item","done","content"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,gBAAP;;AAGA,MAAMC,QAAN,SAAuBD,SAAvB,CAAgC;AAC5BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAIlBC,YAJkB,GAIFC,KAAD,IAAW;AACtB,WAAKF,KAAL,CAAWG,KAAX,CAAiBD,KAAK,CAACE,MAAN,CAAaC,SAA9B;AACH,KANiB;AAEjB;;AAQDC,EAAAA,MAAM,GAAE;AAEJ,UAAMC,IAAI,GAAG,KAAKP,KAAL,CAAWO,IAAxB;;AACA,QAAIA,IAAI,CAACC,IAAT,EAAe;AACX,0BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BD,IAAI,CAACE,OAA/B,CAFJ,CADA;AAMH,KAPD,MAOO;AACH,0BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAG,QAAA,OAAO,EAAE,KAAKR,YAAjB;AAA+B,QAAA,SAAS,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiDM,IAAI,CAACE,OAAtD,CAFJ,CADA;AAKH;AACJ;;AA5B2B;AA+BhC;;;;;;;;;;;AASA,eAAeX,QAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport './ListItem.css'\r\n\r\n\r\nclass ListItem extends Component{\r\n    constructor(props){\r\n        super(props)\r\n    } \r\n    \r\n    onDoneChange = (event) => {\r\n        this.props.cDone(event.target.innerText)\r\n    }\r\n\r\n \r\n    \r\n    render(){\r\n\r\n        const item = this.props.item;\r\n        if (item.done) {\r\n            return (\r\n            <div>\r\n                <button variant=\"contained\" >To-do</button>\r\n                <p className=\"done-item\">{item.content}</p>\r\n                </div>\r\n                )\r\n        } else {\r\n            return (\r\n            <div>\r\n                <button variant=\"contained\" color=\"gray\">Completed</button>\r\n                <p onClick={this.onDoneChange} className=\"item\">{item.content}</p>\r\n                </div>)\r\n        }\r\n    }\r\n}\r\n\r\n/*\r\nconst ListItem = (props) => {\r\n    const item = props.item;\r\n    if (item.done) {\r\n        return <p className=\"done-item\">{item.content}</p>\r\n    } else {\r\n        return <p className=\"item\">{item.content}</p>\r\n    }\r\n} */\r\nexport default ListItem;"]},"metadata":{},"sourceType":"module"}